# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

# GO CI
name: Go

on: [push, pull_request]

jobs:
  determine-changed-services:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changed-services.outputs.services }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          since_last_remote_commit: "true"

      - name: Determine changed services
        id: changed-services
        run: |
          # 定义微服务目录
          SERVICES=("auth" "cart" "payment" "frontend" "checkout" "order" "user" "product")
          CHANGED_SERVICES=()

          # 遍历微服务目录，检查是否有文件被修改
          for service in "${SERVICES[@]}"; do
            if echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -q "app/$service/"; then
              CHANGED_SERVICES+=("$service")
              echo "$service"
            fi
          done

          # 如果没有微服务被修改，默认测试所有微服务
          if [ ${#CHANGED_SERVICES[@]} -eq 0 ]; then
            CHANGED_SERVICES=("${SERVICES[@]}")
            echo "No services changed. Testing all services."
          fi

          # 将结果转换为 JSON 数组
          CHANGED_SERVICES_JSON=$(echo "${CHANGED_SERVICES[@]}" | jq -c -R 'split(" ")')
          echo "Changed services: $CHANGED_SERVICES_JSON"
          echo "::set-output name=services::$CHANGED_SERVICES_JSON"

  build-and-test:
    runs-on: ubuntu-latest
    needs: determine-changed-services
    strategy:
      matrix:
        service: ${{ fromJson(needs.determine-changed-services.outputs.services) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.5"

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            **/go.sum
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build and Test ${{ matrix.service }}
        uses: robherley/go-test-action@v0.4.1
        with:
          moduleDirectory: ./app/${{ matrix.service }}

